{"version":3,"sources":["lib/asyncUtils.js","api/posts.js","modules/boardReducer.js","modules/boardReducer_json.js","modules/index.js","components/IndexSections/Modals.js","components/BoardList.js","components/BoardInsert.js","lib/hooks.js","containers/BoardListContainer.js","components/Board.js","containers/BoardContainer.js","containers/BoardInsertContainer.js","containers/Landing.js","components/BoardList_json.js","containers/Git.js","routes/routes.js","App.js","index.js"],"names":["reducerUtils","initialData","loading","data","error","prevState","payload","createPromiseThunk","type","promiseCreator","SUCCESS","ERROR","param","dispatch","defaultIdSelector","handleAsyncActions","key","keepData","state","action","getBoardList","settingHeaders","headers","axios","get","response","rows","getBoardDtl","boardSeq","insertBoard","board","console","log","formData","FormData","append","boardTitle","boardCn","file","post","deleteBoard","delete","GET_BOARD_LIST","GET_BOARD_LIST_SUCCESS","GET_BOARD_LIST_ERROR","GET_BOARD_DTL","GET_BOARD_DTL_SUCCESS","GET_BOARD_DTL_ERROR","INSERT_BOARD","INSERT_BOARD_SUCCESS","INSERT_BOARD_ERROR","DELETE_BOARD","DELETE_BOARD_SUCCESS","DELETE_BOARD_ERROR","BOARD_TEST","postsAPI","idSelector","id","meta","createPromiseThunkById","boardTest","createAction","text","text2","initialState","boards","result","persistConfig","storage","whitelist","rootReducer","combineReducers","boardReducer","boardReducer_json","filter","length","concat","boardPhotoSbst","persistReducer","React","Board","memo","useSelector","onClick","useCallback","useDispatch","useState","toggleYn","setToggleYn","toggleModal","Col","lg","Card","className","CardBody","Button","color","href","e","preventDefault","Modal","isOpen","toggle","style","width","src","BoardList","map","BoardInsert","onChange","onSubmit","name","value","useInputs","initialForm","form","setForm","target","BoardListContainer","reset","alert","onDelete","useEffect","BoardContainer","match","params","BoardInsertContainer","setBoard","Landing","insertAlert","setInsertAlert","invalidAlert","setInvalidAlert","deleteAlert","setDeleteAlert","mainRef","useRef","document","documentElement","scrollTop","scrollingElement","current","scrollIntoView","setTimeout","getElementsByName","files","getElementById","getElementsByClassName","innerText","ref","Container","Row","placeholder","marginBottom","CustomInput","size","marginTop","xmlns","preserveAspectRatio","version","viewBox","x","y","points","Alert","fade","position","top","zIndex","display","justifyContent","alignItems","Spinner","height","undefined","alt","reader","FileReader","readAsDataURL","onload","fileReader","BoardList_json","Git","routes","path","component","exact","RouteWithSubRoutes","route","render","props","App","createGlobalStyle","i","Component","customHistory","createBrowserHistory","middlewares","promiseMiddleware","ReduxThunk","withExtraArgument","history","logger","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","ReactDOM","basename"],"mappings":"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","file":"static/js/main.2983b278.chunk.js","sourcesContent":["// 리듀서에서 사용 할 수 있는 여러 유틸 함수들입니다.\r\nexport const reducerUtils = {\r\n  // 초기 상태. 초기 data 값은 기본적으로 null 이지만\r\n  // 바꿀 수도 있습니다.\r\n  initial: (initialData = null) => ({\r\n    loading: false,\r\n    data: initialData,\r\n    error: null\r\n  }),\r\n  // 로딩중 상태. prevState의 경우엔 기본값은 null 이지만\r\n  // 따로 값을 지정하면 null 로 바꾸지 않고 다른 값을 유지시킬 수 있습니다.\r\n  loading: (prevState = null) => ({\r\n    loading: true,\r\n    data: prevState,\r\n    error: null\r\n  }),\r\n  // 성공 상태\r\n  success: payload => ({\r\n    loading: false,\r\n    data: payload,\r\n    error: null\r\n  }),\r\n  // 실패 상태\r\n  error: error => ({\r\n    loading: false,\r\n    data: null,\r\n    error: error\r\n  })\r\n};\r\n\r\n// Promise에 기반한 Thunk를 만들어주는 함수입니다.\r\nexport const createPromiseThunk = (type, promiseCreator) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  // 이 함수는 promiseCreator가 단 하나의 파라미터만 받는다는 전제하에 작성되었습니다.\r\n  // 만약 여러 종류의 파라미터를 전달해야하는 상황에서는 객체 타입의 파라미터를 받아오도록 하면 됩니다.\r\n  // 예: writeComment({ postId: 1, text: '댓글 내용' });\r\n  return param => async dispatch => {\r\n    // 요청 시작\r\n    dispatch({ type, param });\r\n    try {\r\n      // 결과물의 이름을 payload 라는 이름으로 통일시킵니다.\r\n      const payload = await promiseCreator(param);\r\n      dispatch({ type: SUCCESS, payload }); // 성공\r\n    } catch (e) {\r\n      dispatch({ type: ERROR, payload: e, error: true }); // 실패\r\n    }\r\n  };\r\n};\r\n\r\n\r\n// 특정 id 를 처리하는 Thunk 생성함수\r\nconst defaultIdSelector = param => param;\r\nexport const createPromiseThunkById = (\r\n  type,\r\n  promiseCreator,\r\n  // 파라미터에서 id 를 어떻게 선택 할 지 정의하는 함수입니다.\r\n  // 기본 값으로는 파라미터를 그대로 id로 사용합니다.\r\n  // 하지만 만약 파라미터가 { id: 1, details: true } 이런 형태라면\r\n  // idSelector 를 param => param.id 이런식으로 설정 할 수 있곘죠.\r\n  idSelector = defaultIdSelector\r\n) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  return param => async dispatch => {\r\n    const id = idSelector(param);\r\n    dispatch({ type, meta: id });\r\n    try {\r\n      const payload = await promiseCreator(param);\r\n      dispatch({ type: SUCCESS, payload, meta: id });\r\n    } catch (e) {\r\n      dispatch({ type: ERROR, error: true, payload: e, meta: id });\r\n    }\r\n  };\r\n};\r\n\r\n// 비동기 관련 액션들을 처리하는 리듀서를 만들어줍니다.\r\n// type 은 액션의 타입, key 는 상태의 key (예: posts, post) 입니다.\r\nexport const handleAsyncActions = (type, key, keepData = false) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n  return (state, action) => {\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: reducerUtils.loading(keepData ? state[key].data : null)\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: reducerUtils.success(action.payload)\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: reducerUtils.error(action.error)\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n\r\n// id별로 처리하는 유틸함수\r\nexport const handleAsyncActionsById = (type, key, keepData = false) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n  return (state, action) => {\r\n    const id = action.meta;\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: reducerUtils.loading(\r\n              // state[key][id]가 만들어져있지 않을 수도 있으니까 유효성을 먼저 검사 후 data 조회\r\n              keepData ? state[key][id] && state[key][id].data : null\r\n            )\r\n          }\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: reducerUtils.success(action.payload)\r\n          }\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: reducerUtils.error(action.payload)\r\n          }\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};","import axios from 'axios';\r\n\r\nexport const getBoardList = async() => {\r\n    const settingHeaders = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const response = await axios.get(`http://localhost:8080/allEars/board`, settingHeaders);\r\n    return response.data.rows;\r\n}\r\n\r\nexport const getBoardDtl = async(boardSeq) => {\r\n    const settingHeaders = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const response = await axios.get(`http://localhost:8080/allEars/board/${boardSeq}`, settingHeaders);\r\n    return response.data;\r\n}\r\n\r\nexport const insertBoard = async(board) => {\r\n\r\n    console.log(board);\r\n    const formData = new FormData();\r\n    formData.append(\"boardTitle\", board.boardTitle);\r\n    formData.append(\"boardCn\", board.boardCn);\r\n    formData.append(\"file\", board.file);\r\n    const settingHeaders = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n\r\n    const response = await axios.post(`http://localhost:8080/allEars/board`, formData, settingHeaders);\r\n    return response.data;\r\n}\r\n\r\nexport const deleteBoard = async(boardSeq) => {\r\n\r\n    const settingHeaders = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n\r\n    const response = await axios.delete(`http://localhost:8080/allEars/board/${boardSeq}`, settingHeaders);\r\n    return response.data;\r\n}","import produce from 'immer'; // immer 불러오기\r\nimport {\r\n    createPromiseThunk,\r\n    createPromiseThunkById,\r\n    reducerUtils,\r\n    handleAsyncActions,\r\n    handleAsyncActionsById\r\n} from '../lib/asyncUtils';\r\nimport * as postsAPI from '../api/posts'; // api/posts 안의 함수 모두 불러오기\r\nimport { createAction } from 'redux-actions';\r\n\r\n// 액션 타입 정의\r\nconst GET_BOARD_LIST = 'board/GET_BOARD_LIST';\r\nconst GET_BOARD_LIST_SUCCESS = 'board/GET_BOARD_LIST_SUCCESS';\r\nconst GET_BOARD_LIST_ERROR = 'board/GET_BOARD_LIST_ERROR';\r\n\r\nconst GET_BOARD_DTL = 'board/GET_BOARD_DTL';\r\nconst GET_BOARD_DTL_SUCCESS = 'board/GET_BOARD_DTL_SUCCESS';\r\nconst GET_BOARD_DTL_ERROR = 'board/GET_BOARD_DTL_ERROR';\r\n\r\nconst INSERT_BOARD = 'board/INSERT_BOARD';\r\nconst INSERT_BOARD_SUCCESS = 'board/INSERT_BOARD_SUCCESS';\r\nconst INSERT_BOARD_ERROR = 'board/INSERT_BOARD_ERROR';\r\n\r\nconst DELETE_BOARD = 'board/DELETE_BOARD';\r\nconst DELETE_BOARD_SUCCESS = 'board/DELETE_BOARD_SUCCESS';\r\nconst DELETE_BOARD_ERROR = 'board/DELETE_BOARD_ERROR';\r\n\r\nconst BOARD_TEST = 'board/TEST';\r\n\r\n// 액션 생성함수 정의\r\nexport const getBoardList = createPromiseThunk(GET_BOARD_LIST, postsAPI.getBoardList);\r\nexport const getBoardDtl = createPromiseThunkById(GET_BOARD_DTL, postsAPI.getBoardDtl);\r\nexport const insertBoard = createPromiseThunk(INSERT_BOARD, postsAPI.insertBoard);\r\nexport const deleteBoard = createPromiseThunk(DELETE_BOARD, postsAPI.deleteBoard);\r\nexport const boardTest = createAction(BOARD_TEST, (text, text2) => ({ text, text2, id: 3 }));\r\n\r\n// 초기상태 정의\r\nconst initialState = {\r\n    boards: reducerUtils.initial(),\r\n    board: {},\r\n    result: reducerUtils.initial()\r\n}\r\n\r\n// 리듀서 작성\r\nexport default function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BOARD_LIST:\r\n        case GET_BOARD_LIST_SUCCESS:\r\n        case GET_BOARD_LIST_ERROR:\r\n            return handleAsyncActions(GET_BOARD_LIST, 'boards', true)(state, action);\r\n        case GET_BOARD_DTL:\r\n        case GET_BOARD_DTL_SUCCESS:\r\n        case GET_BOARD_DTL_ERROR:\r\n            return handleAsyncActions(GET_BOARD_DTL, 'board', true)(state, action);\r\n        case INSERT_BOARD:\r\n        case INSERT_BOARD_ERROR:\r\n        case INSERT_BOARD_SUCCESS:\r\n            return handleAsyncActions(INSERT_BOARD, 'result', true)(state, action);\r\n        // return {\r\n        //     ...state,\r\n        //     boards: reducerUtils.success((state.boards.data).concat(action.payload.data))\r\n        // }\r\n        case DELETE_BOARD:\r\n        case DELETE_BOARD_ERROR:\r\n        case DELETE_BOARD_SUCCESS:\r\n            return handleAsyncActions(DELETE_BOARD, 'result', true)(state, action);\r\n            // return {\r\n            //     ...state,\r\n            //     boards: reducerUtils.success((state.boards.data).filter((board) => board.boardSeq !== action.payload.data))\r\n            // }\r\n        case BOARD_TEST:\r\n            console.log(action.payload);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// 3번째 인자를 사용하면 withExtraArgument 에서 넣어준 값들을 사용 할 수 있습니다.\r\nexport const goToBoardInsert = () => (dispatch, getState, { history }) => {\r\n    history.push('/board/insert');\r\n};","import produce from 'immer'; // immer 불러오기\r\nimport {\r\n    createPromiseThunk,\r\n    createPromiseThunkById,\r\n    reducerUtils,\r\n    handleAsyncActions,\r\n    handleAsyncActionsById\r\n} from '../lib/asyncUtils';\r\nimport * as postsAPI from '../api/posts'; // api/posts 안의 함수 모두 불러오기\r\nimport { createAction } from 'redux-actions';\r\n\r\n// 액션 타입 정의\r\nconst GET_BOARD_LIST = 'board_json/GET_BOARD_LIST';\r\nconst GET_BOARD_DTL = 'board_json/GET_BOARD_DTL';\r\nconst INSERT_BOARD = 'board_json/INSERT_BOARD';\r\nconst DELETE_BOARD = 'board_json/DELETE_BOARD';\r\n\r\n\r\n// 액션 생성함수 정의\r\nexport const getBoardList = createAction(GET_BOARD_LIST);\r\nexport const getBoardDtl = createAction(GET_BOARD_DTL, boardSeq => boardSeq);\r\nexport const insertBoard = createAction(INSERT_BOARD, board => board);\r\nexport const deleteBoard = createAction(DELETE_BOARD, boardSeq => boardSeq);\r\n\r\n// 초기상태 정의\r\nconst initialState = {\r\n    boards: [\r\n        {\r\n            \"boardSeq\": 1,\r\n            \"boardTitle\": \"Hello\",\r\n            \"boardCn\": \"This is React Project\",\r\n            \"boardPhotoSbst\": null\r\n        },\r\n        {\r\n            \"boardSeq\": 2,\r\n            \"boardTitle\": \"BYE\",\r\n            \"boardCn\": \"Sample Project\",\r\n            \"boardPhotoSbst\": null\r\n        }\r\n    ],\r\n    board: {}\r\n}\r\n\r\n\r\n// 리듀서 작성\r\nexport default function boardReducer_json(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BOARD_LIST:\r\n            return {\r\n                ...state\r\n            };\r\n        case GET_BOARD_DTL:\r\n            return {\r\n                ...state,\r\n                board: (state.boards).filter(board => board.boardSeq == action.payload)\r\n            };\r\n        case INSERT_BOARD:\r\n            var id = 1;\r\n            if (state.boards.length !== 0) {\r\n                id = state.boards[state.boards.length-1].boardSeq + 1;\r\n            }\r\n        return {\r\n            ...state,\r\n            boards: state.boards.concat({ \"boardSeq\": id, \"boardTitle\": action.payload.boardTitle, \"boardCn\": action.payload.boardCn, \"boardPhotoSbst\": action.payload.boardPhotoSbst })\r\n        }\r\n        case DELETE_BOARD:\r\n            console.log(action);\r\n            return {\r\n                ...state,\r\n                boards: (state.boards).filter((board) => board.boardSeq !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// 3번째 인자를 사용하면 withExtraArgument 에서 넣어준 값들을 사용 할 수 있습니다.\r\nexport const goToBoardInsert = () => (dispatch, getState, { history }) => {\r\n    history.push('/board/insert');\r\n};","import { combineReducers } from 'redux';\r\nimport boardReducer from './boardReducer';\r\nimport boardReducer_json from './boardReducer_json';\r\n\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n    // 새로운 persist config를 선언해준다.\r\n    key: 'root',\r\n    // reducer 객체의 어느 지점에서 부터 데이터를 저장할 것인지 설정해주는것이 key이다.\r\n    // root부터 시작한다고 지정해준다.\r\n    storage: storage,\r\n    // 위에 import 한 성격의 storage를 지정해준다. 이 예제의 경우에는 localstorage\r\n    whitelist: [\"boardReducer\",\"boardReducer_json\"],\r\n    // 유지 및 보존하고 싶은 데이터를 배열안에 지정해준다. \r\n    // string 형태이고 아래 combineReducers에 지정된 값들을 사용해주면 된다. \r\n  };\r\n\r\nconst rootReducer = combineReducers({ boardReducer, boardReducer_json });\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Design System React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { useState } from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Modal,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nfunction Modals({ btnYn, btnName, modalType, board, onToggle, toggleYn}) {\r\n  const { boardTitle, boardCn } = board;\r\n  \r\n  return (\r\n    <>\r\n      {/*defaultModal */}\r\n      <Button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        onClick={onToggle}\r\n        style = {{display: btnYn ? 'block' : 'none'}}\r\n      >\r\n        {btnName}\r\n      </Button>\r\n      <Modal\r\n        className=\"modal-dialog-centered\"\r\n        isOpen={toggleYn}\r\n        toggle={onToggle}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h6 className=\"modal-title\" id=\"modal-title-default\">\r\n            {boardTitle}\r\n          </h6>\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            type=\"button\"\r\n            onClick={onToggle}\r\n          >\r\n            <span aria-hidden={true}>×</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <p>\r\n            {boardCn}\r\n          </p>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <Button\r\n            className=\"ml-auto\"\r\n            color=\"link\"\r\n            data-dismiss=\"modal\"\r\n            type=\"button\"\r\n            onClick={onToggle}\r\n          >\r\n            Close\r\n                </Button>\r\n        </div>\r\n      </Modal>\r\n      {/* <Col md=\"4\">\r\n            <Button\r\n              block\r\n              className=\"mb-3\"\r\n              color=\"warning\"\r\n              type=\"button\"\r\n              onClick={() => this.toggleModal(\"notificationModal\")}\r\n            >\r\n              Notification\r\n            </Button>\r\n            <Modal\r\n              className=\"modal-dialog-centered modal-danger\"\r\n              contentClassName=\"bg-gradient-danger\"\r\n              isOpen={this.state.notificationModal}\r\n              toggle={() => this.toggleModal(\"notificationModal\")}\r\n            >\r\n              <div className=\"modal-header\">\r\n                <h6 className=\"modal-title\" id=\"modal-title-notification\">\r\n                  Your attention is required\r\n                </h6>\r\n                <button\r\n                  aria-label=\"Close\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  type=\"button\"\r\n                  onClick={() => this.toggleModal(\"notificationModal\")}\r\n                >\r\n                  <span aria-hidden={true}>×</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"py-3 text-center\">\r\n                  <i className=\"ni ni-bell-55 ni-3x\" />\r\n                  <h4 className=\"heading mt-4\">You should read this!</h4>\r\n                  <p>\r\n                    A small river named Duden flows by their place and supplies\r\n                    it with the necessary regelialia.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <Button className=\"btn-white\" color=\"default\" type=\"button\">\r\n                  Ok, Got it\r\n                </Button>\r\n                <Button\r\n                  className=\"text-white ml-auto\"\r\n                  color=\"link\"\r\n                  data-dismiss=\"modal\"\r\n                  type=\"button\"\r\n                  onClick={() => this.toggleModal(\"notificationModal\")}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </Modal>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <Button\r\n              block\r\n              color=\"default\"\r\n              type=\"button\"\r\n              onClick={() => this.toggleModal(\"formModal\")}\r\n            >\r\n              Form\r\n            </Button>\r\n            <Modal\r\n              className=\"modal-dialog-centered\"\r\n              size=\"sm\"\r\n              isOpen={this.state.formModal}\r\n              toggle={() => this.toggleModal(\"formModal\")}\r\n            >\r\n              <div className=\"modal-body p-0\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                  <CardHeader className=\"bg-white pb-5\">\r\n                    <div className=\"text-muted text-center mb-3\">\r\n                      <small>Sign in with</small>\r\n                    </div>\r\n                    <div className=\"btn-wrapper text-center\">\r\n                      <Button\r\n                        className=\"btn-icon mt-2 mb-2\"\r\n                        color=\"neutral\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                      >\r\n                        <span className=\"btn-inner--icon mr-1\">\r\n                          <img\r\n                            alt=\"...\"\r\n                            src={require(\"assets/img/icons/common/github.svg\")}\r\n                          />\r\n                        </span>\r\n                        <span className=\"btn-inner--text\">Github</span>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"btn-icon mt-2 mb-2 ml-1\"\r\n                        color=\"neutral\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                      >\r\n                        <span className=\"btn-inner--icon mr-1\">\r\n                          <img\r\n                            alt=\"...\"\r\n                            src={require(\"assets/img/icons/common/google.svg\")}\r\n                          />\r\n                        </span>\r\n                        <span className=\"btn-inner--text\">Google</span>\r\n                      </Button>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"px-lg-5 py-lg-5\">\r\n                    <div className=\"text-center text-muted mb-4\">\r\n                      <small>Or sign in with credentials</small>\r\n                    </div>\r\n                    <Form role=\"form\">\r\n                      <FormGroup\r\n                        className={classnames(\"mb-3\", {\r\n                          focused: this.state.emailFocused\r\n                        })}\r\n                      >\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-email-83\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                            onFocus={e => this.setState({ emailFocused: true })}\r\n                            onBlur={e => this.setState({ emailFocused: false })}\r\n                          />\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                      <FormGroup\r\n                        className={classnames({\r\n                          focused: this.state.passwordFocused\r\n                        })}\r\n                      >\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-lock-circle-open\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            autoComplete=\"off\"\r\n                            onFocus={e =>\r\n                              this.setState({ passwordFocused: true })\r\n                            }\r\n                            onBlur={e =>\r\n                              this.setState({ passwordFocused: false })\r\n                            }\r\n                          />\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                      <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                        <input\r\n                          className=\"custom-control-input\"\r\n                          id=\" customCheckLogin\"\r\n                          type=\"checkbox\"\r\n                        />\r\n                        <label\r\n                          className=\"custom-control-label\"\r\n                          htmlFor=\" customCheckLogin\"\r\n                        >\r\n                          <span className=\"text-muted\">Remember me</span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"text-center\">\r\n                        <Button className=\"my-4\" color=\"primary\" type=\"button\">\r\n                          Sign in\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </Modal>\r\n          </Col> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Modals);","import { getBoardDtl } from 'modules/boardReducer';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n   Badge,\r\n   Button,\r\n   Card,\r\n   CardBody,\r\n   Modal,\r\n   Col\r\n} from \"reactstrap\";\r\nimport Modals from './IndexSections/Modals';\r\n\r\nconst Board = React.memo(function Board({ board, deleteBoard }) {\r\n   const { board : { data } } = useSelector(state => state.boardReducer);\r\n   const onClick = useCallback((boardSeq) => {\r\n      deleteBoard(boardSeq);\r\n   });\r\n\r\n   const dispatch = useDispatch();\r\n   const [toggleYn, setToggleYn] = useState(false);\r\n   const toggleModal = () => {\r\n      setToggleYn(!toggleYn);\r\n      dispatch(getBoardDtl(board.boardSeq));\r\n   }\r\n\r\n   return (\r\n      <Col lg=\"4\" key={board.boardSeq}>\r\n         <Card className=\"card-lift--hover shadow border-0 mb-5\" onClick={() => toggleModal(\"defaultModal\")}>\r\n            <CardBody className=\"py-5\">\r\n               <div className=\"icon icon-shape icon-shape-primary rounded-circle mb-4\">\r\n                  <i className=\"ni ni-check-bold\" />\r\n               </div>\r\n               <h6 className=\"text-primary text-uppercase\">\r\n                  {board.boardTitle}\r\n               </h6>\r\n               <p className=\"description mt-3\">\r\n                  {board.boardCn}\r\n               </p>\r\n               {/* <div>\r\n                     <Badge color=\"primary\" pill className=\"mr-1\">\r\n                        design\r\n                     </Badge>\r\n                     <Badge color=\"primary\" pill className=\"mr-1\">\r\n                        system\r\n                     </Badge>\r\n                     <Badge color=\"primary\" pill className=\"mr-1\">\r\n                        creative\r\n                     </Badge>\r\n                  </div>  */}\r\n               <Button\r\n                  type=\"button\"\r\n                  color=\"danger\"\r\n                  href=\"#pablo\"\r\n                  onClick={e => { e.preventDefault(); onClick(board.boardSeq) }}\r\n               >\r\n                  DELETE\r\n                  </Button>\r\n               <Modal\r\n                  className=\"modal-dialog-centered\"\r\n                  isOpen={toggleYn}\r\n                  toggle={() => toggleModal(\"defaultModal\")}\r\n               >\r\n                  {\r\n                     (\r\n                        !data ? null :\r\n                        <>\r\n                        <div className=\"modal-header\">\r\n                           <h6 className=\"modal-title\" id=\"modal-title-default\">\r\n                              {data.boardTitle}\r\n                           </h6>\r\n                           <button\r\n                              aria-label=\"Close\"\r\n                              className=\"close\"\r\n                              data-dismiss=\"modal\"\r\n                              type=\"button\"\r\n                              onClick={() => toggleModal(\"defaultModal\")}\r\n                           >\r\n                              <span aria-hidden={true}>×</span>\r\n                           </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                           <p>\r\n                              {data.boardCn}\r\n                           </p>\r\n                           <p>\r\n                           {data.boardPhotoSbst != null ? <img style={{width: \"300px\"}} src={\"data:image/jpeg; base64, \"+ data.boardPhotoSbst}/> : null}\r\n                           </p>\r\n                        </div>\r\n                        </>\r\n                     )\r\n                  }\r\n                  <div className=\"modal-footer\">\r\n                     <Button\r\n                        className=\"ml-auto\"\r\n                        color=\"link\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"defaultModal\")}\r\n                     >\r\n                        Close\r\n                </Button>\r\n                  </div>\r\n               </Modal>\r\n            </CardBody>\r\n         </Card>\r\n      </Col>\r\n   );\r\n});\r\n\r\nfunction BoardList({ boards, deleteBoard }) {\r\n   return (\r\n      <>\r\n         {boards.map(board => (\r\n            <Board key={board.boardSeq} board={board} deleteBoard={deleteBoard} />\r\n         ))}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default React.memo(BoardList);","import React, { useState } from 'react';\r\n\r\nfunction BoardInsert({ board, onChange, onSubmit }) {\r\n    const { boardTitle, boardCn } = board;\r\n    const insertBoard = e => {\r\n        e.preventDefault();\r\n        onSubmit();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={insertBoard}>\r\n                <input name=\"boardTitle\" value={boardTitle} onChange={onChange} />\r\n                <input name=\"boardCn\" value={boardCn} onChange={onChange} />\r\n                <button>등록</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(BoardInsert);","import React, { useCallback, useState } from 'react';\r\n\r\nexport function useInputs(initialForm) {\r\n    const [form, setForm] = useState(initialForm);\r\n    const onChange = useCallback(e => {\r\n        const {name, value} = e.target;\r\n        setForm(form => ({\r\n            ...form,\r\n            [name]: value\r\n        }));\r\n    }, []);\r\n    const reset = useCallback(() => setForm(initialForm), [initialForm]);\r\n    return [form, onChange, reset];\r\n};","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport BoardList from '../components/BoardList';\r\nimport { getBoardList, goToBoardInsert, boardTest, deleteBoard, insertBoard } from '../modules/boardReducer';\r\nimport BoardInsert from \"../components/BoardInsert\";\r\nimport { useInputs } from \"../lib/hooks\";\r\n\r\nfunction BoardListContainer() {\r\n    const { boards, result } = useSelector(state => state.boardReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ {boardTitle, boardCn}, onChange, reset] = useInputs({\r\n        boardTitle: \"\",\r\n        boardCn: \"\"\r\n    });\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(insertBoard({boardTitle, boardCn}));\r\n        alert(\"등록완료\");\r\n        reset();\r\n    }, [{boardTitle, boardCn}]);\r\n\r\n    const onDelete = useCallback((boardSeq) => {\r\n        dispatch(deleteBoard(boardSeq));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getBoardList());\r\n    }, [result]);\r\n\r\n    if (boards.loading) return <div>로딩중...</div>;\r\n    if (boards.error) return <div>에러 발생!</div>;\r\n    if (!boards.data) return null;\r\n\r\n    return (\r\n        <>\r\n            <BoardInsert board={{boardTitle, boardCn}} onChange={onChange} onSubmit={onSubmit} />\r\n            <BoardList boards={boards.data} deleteBoard={onDelete} />\r\n            <button onClick={() => dispatch(boardTest(\"test\", \"test2\"))}>테스트</button>\r\n            {/* <button onClick={() => dispatch(goToBoardInsert())}>등록</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(BoardListContainer);","import React from 'react';\r\n\r\nfunction Board({ board }) {\r\n  const { boardTitle, boardCn, boardPhotoSbst } = board;\r\n  const style = {\r\n    width: \"300px\"\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>{boardTitle}</h1>\r\n      <p>{boardCn}</p>\r\n      {boardPhotoSbst != null ? <img style={style} src={\"data:image/jpeg; base64, \"+ boardPhotoSbst}/> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getBoardDtl } from '../modules/boardReducer';\r\nimport Board from '../components/Board';\r\n\r\nfunction BoardContainer({ match }) {\r\n  let { boardSeq } = match.params; // URL 파라미터 조회하기\r\n  \r\n  const { data, loading, error } = useSelector(\r\n    state => state.boardReducer.board[boardSeq]\r\n  ) || {\r\n    loading: false,\r\n    data: null,\r\n    error: null\r\n  }; // 아예 데이터가 존재하지 않을 때가 있으므로, 비구조화 할당이 오류나지 않도록\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (data) return; // 포스트가 존재하면 아예 요청을 하지 않음\r\n    dispatch(getBoardDtl(boardSeq));\r\n  }, [boardSeq, dispatch, data]);\r\n\r\n  if (loading && !data) return <div>로딩중...</div>;\r\n  if (error) return <div>에러 발생!</div>;\r\n  if (!data) return null;\r\n\r\n  return (\r\n    <>\r\n      <Board board={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BoardContainer;","import React, { Component, useEffect, useState, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { insertBoard } from '../modules/boardReducer';\r\nimport BoardInsert from \"../components/BoardInsert\";\r\n\r\nfunction BoardInsertContainer() {\r\n  const [board, setBoard] = useState({\r\n    \"boardTitle\": \"\",\r\n    \"boardCn\": \"\"\r\n  });\r\n\r\n  const onChange = useCallback(e => {\r\n    setBoard({\r\n      ...board,\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }, [board]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(insertBoard(board));\r\n    alert(\"등록완료\");\r\n    setBoard({\r\n      \"boardTitle\": \"\",\r\n      \"boardCn\": \"\"\r\n    });\r\n  }, [board]);\r\n\r\n  return (\r\n      <BoardInsert board={board} onChange={onChange} onSubmit={onSubmit}/>\r\n  )\r\n}\r\n\r\nexport default React.memo(BoardInsertContainer);\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Design System React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useInputs } from \"../lib/hooks\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Spinner,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  CustomInput,\r\n  Label\r\n} from \"reactstrap\";\r\n\r\nimport { getBoardList, goToBoardInsert, boardTest, deleteBoard, insertBoard } from '../modules/boardReducer';\r\n\r\nimport BoardList from '../components/BoardList';\r\nimport Input from 'reactstrap/lib/Input';\r\nimport FormGroup from 'reactstrap/lib/FormGroup';\r\nimport Button from 'reactstrap/lib/Button';\r\n\r\nfunction Landing() {\r\n  const { boards, result } = useSelector(state => state.boardReducer);\r\n  const [{ boardTitle, boardCn, file }, onChange, reset] = useInputs({\r\n    boardTitle: \"\",\r\n    boardCn: \"\",\r\n    file: null\r\n  });\r\n\r\n  const [insertAlert, setInsertAlert] = useState(false);\r\n  const [invalidAlert, setInvalidAlert] = useState(false);\r\n  const [deleteAlert, setDeleteAlert] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const mainRef = useRef(0);\r\n  useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainRef.current.scrollIntoView();\r\n    dispatch(getBoardList());  \r\n  }, [result]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (insertAlert) {\r\n        setInsertAlert(false);\r\n      } else if (invalidAlert) {\r\n        setInvalidAlert(false);\r\n      } else if (deleteAlert) {\r\n        setDeleteAlert(false);\r\n      }\r\n    }, 3000)\r\n  }, [insertAlert, invalidAlert, deleteAlert]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (boardTitle == \"\" || boardCn == \"\") {\r\n      setInvalidAlert(true);\r\n      return;\r\n    }\r\n    const file = document.getElementsByName(\"file\")[0].files[0];\r\n    dispatch(insertBoard({ boardTitle, boardCn, file}));\r\n    setInsertAlert(true);\r\n    reset();\r\n    document.getElementById(\"exampleCustomFileBrowser\").value = '';\r\n    document.getElementsByClassName(\"custom-file-label\")[0].innerText = \"Choose file\";\r\n  }, [{ boardTitle, boardCn, file }]);\r\n\r\n  const onDelete = useCallback((boardSeq) => {\r\n    dispatch(deleteBoard(boardSeq));\r\n    setDeleteAlert(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <main ref={mainRef}>\r\n        <div className=\"position-relative\">\r\n          {/* shape Hero */}\r\n          <section className=\"section section-lg section-shaped pb-250\">\r\n            <div className=\"shape shape-style-1 shape-default\">\r\n              <span />\r\n              <span />\r\n              <span />\r\n              <span />\r\n              <span />\r\n              <span />\r\n            </div>\r\n            <Container className=\"py-lg-md d-flex\">\r\n              <div className=\"col px-0\">\r\n                <Row>\r\n                  <Col lg=\"6\">\r\n                    <h1 className=\"display-3 text-white\">\r\n                      Board\r\n                        <span>insert board</span>\r\n                    </h1>\r\n                    <FormGroup>\r\n                      <Input type=\"text\" placeholder=\"Title\" style={{ marginBottom: '10px' }} name=\"boardTitle\" value={boardTitle} onChange={onChange} />\r\n                      <Input type=\"textarea\" placeholder=\"Content ...\" rows=\"3\" name=\"boardCn\" value={boardCn} onChange={onChange}  style={{ marginBottom: '10px' }} />\r\n                      <CustomInput type=\"file\" id=\"exampleCustomFileBrowser\" name=\"file\" />\r\n                      <Button type=\"button\" color=\"secondary\" size=\"m\" style={{ marginTop: '10px' }}  onClick={onSubmit}>submit</Button>\r\n                    </FormGroup>\r\n                    {/* \r\n                      <p className=\"lead text-white\">\r\n                        The design system comes with four pre-built pages to\r\n                        help you get started faster. You can change the text and\r\n                        images and you're good to go.\r\n                      </p>\r\n                      <div className=\"btn-wrapper\">\r\n                        <Button\r\n                          className=\"btn-icon mb-3 mb-sm-0\"\r\n                          color=\"info\"\r\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/alerts?ref=adsr-landing-page\"\r\n                        >\r\n                          <span className=\"btn-inner--icon mr-1\">\r\n                            <i className=\"fa fa-code\" />\r\n                          </span>\r\n                          <span className=\"btn-inner--text\">Components</span>\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-white btn-icon mb-3 mb-sm-0 ml-1\"\r\n                          color=\"default\"\r\n                          href=\"https://www.creative-tim.com/product/argon-design-system-react?ref=adsr-landing-page\"\r\n                        >\r\n                          <span className=\"btn-inner--icon mr-1\">\r\n                            <i className=\"ni ni-cloud-download-95\" />\r\n                          </span>\r\n                          <span className=\"btn-inner--text\">\r\n                            Download React\r\n                          </span>\r\n                        </Button>\r\n                      </div> */}\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Container>\r\n            {/* SVG separator */}\r\n            <div className=\"separator separator-bottom separator-skew\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                preserveAspectRatio=\"none\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 2560 100\"\r\n                x=\"0\"\r\n                y=\"0\"\r\n              >\r\n                <polygon\r\n                  className=\"fill-white\"\r\n                  points=\"2560 0 2560 100 0 100\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </section>\r\n          {/* 1st Hero Variation */}\r\n          {/* ALERT */}\r\n          <Alert color=\"success\" isOpen={insertAlert} fade={true} style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 100}}>\r\n            <span className=\"alert-inner--icon\">\r\n              <i className=\"ni ni-like-2\" />\r\n            </span>\r\n            <span className=\"alert-inner--text ml-1\">\r\n              <strong>SUCCESS!</strong> 게시물이 등록되었습니다.\r\n          </span>\r\n          </Alert>\r\n          <Alert color=\"danger\" isOpen={invalidAlert} fade={true} style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 100}}>\r\n            <span className=\"alert-inner--icon\">\r\n              <i className=\"ni ni-support-16\" />\r\n            </span>\r\n            <span className=\"alert-inner--text ml-1\">\r\n              <strong>DANGER!</strong> 내용을 입력해주세요!\r\n          </span>\r\n          </Alert>\r\n          <Alert color=\"warning\" isOpen={deleteAlert} fade={true} style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 100}}>\r\n            <span className=\"alert-inner--icon\">\r\n              <i className=\"ni ni-bell-55\" />\r\n            </span>\r\n            <span className=\"alert-inner--text ml-1\">\r\n              <strong>SUCCESS!</strong> 게시물이 삭제되었습니다!\r\n          </span>\r\n          </Alert>\r\n        </div>\r\n        {\r\n          (boards.loading || boards.error || !boards.data ?\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '-80px' }}>\r\n              <Spinner type=\"grow\" color=\"light\" style={{ width: '8rem', height: '8rem' }} />\r\n            </div> :\r\n            <section className=\"section section-lg pt-lg-0 mt--200\">\r\n              <Container>\r\n                <Row className=\"justify-content-center\">\r\n                  <Col lg=\"12\">\r\n                    <Row className=\"row-grid\">\r\n                      <BoardList boards={boards.data} deleteBoard={onDelete} />\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </section>\r\n          )\r\n        }\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Landing);\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n   Badge,\r\n   Button,\r\n   Card,\r\n   CardBody,\r\n   Modal,\r\n   Col\r\n} from \"reactstrap\";\r\nimport Modals from './IndexSections/Modals';\r\n\r\nconst Board = React.memo(function Board({ board, deleteBoard }) {\r\n   const onClick = useCallback((boardSeq) => {\r\n      deleteBoard(boardSeq);\r\n   });\r\n\r\n   const [toggleYn, setToggleYn] = useState(false);\r\n   const toggleModal = () => {\r\n      setToggleYn(!toggleYn);\r\n   }\r\n   const fileReader = (file, boardSeq) => {\r\n      console.log(file,file.name);\r\n      if (file && file.name !== undefined) {\r\n         \r\n         // 읽기\r\n         var reader = new FileReader();\r\n         reader.readAsDataURL(file);\r\n         //로드 한 후\r\n         reader.onload = function  () {\r\n            if (document.getElementById(`image_${boardSeq}`) != null) { document.getElementById(`image_${boardSeq}`).src = reader.result };\r\n         };\r\n      }\r\n      \r\n   }\r\n   return (\r\n      <Col lg=\"4\" key={board.boardSeq}>\r\n         <Card className=\"card-lift--hover shadow border-0 mb-5\" onClick={() => toggleModal(\"defaultModal\")}>\r\n            <CardBody className=\"py-5\">\r\n               <div className=\"icon icon-shape icon-shape-primary rounded-circle mb-4\">\r\n                  <i className=\"ni ni-check-bold\" />\r\n               </div>\r\n               <h6 className=\"text-primary text-uppercase\">\r\n                  {board.boardTitle}\r\n               </h6>\r\n               <p className=\"description mt-3\">\r\n                  {board.boardCn}\r\n               </p>\r\n               {/* <div>\r\n                     <Badge color=\"primary\" pill className=\"mr-1\">\r\n                        design\r\n                     </Badge>\r\n                     <Badge color=\"primary\" pill className=\"mr-1\">\r\n                        system\r\n                     </Badge>\r\n                     <Badge color=\"primary\" pill className=\"mr-1\">\r\n                        creative\r\n                     </Badge>\r\n                  </div>  */}\r\n               <Button\r\n                  type=\"button\"\r\n                  color=\"danger\"\r\n                  href=\"#pablo\"\r\n                  onClick={e => { e.preventDefault(); onClick(board.boardSeq) }}\r\n               >\r\n                  DELETE\r\n                  </Button>\r\n               <Modal\r\n                  className=\"modal-dialog-centered\"\r\n                  isOpen={toggleYn}\r\n                  toggle={() => toggleModal(\"defaultModal\")}\r\n               >\r\n                  <div className=\"modal-header\">\r\n                     <h6 className=\"modal-title\" id=\"modal-title-default\">\r\n                        {board.boardTitle}\r\n                     </h6>\r\n                     <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"defaultModal\")}\r\n                     >\r\n                        <span aria-hidden={true}>×</span>\r\n                     </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                     <p>\r\n                        {board.boardCn}\r\n                     </p>\r\n                     <p>\r\n                        {board.boardPhotoSbst != null && board.boardPhotoSbst.name !== undefined ? <img id={`image_${board.boardSeq}`} alt={`image_${board.boardSeq}`} style={{width: \"300px\"}} src={fileReader(board.boardPhotoSbst, board.boardSeq)}/> : null}\r\n                     </p>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                     <Button\r\n                        className=\"ml-auto\"\r\n                        color=\"link\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"defaultModal\")}\r\n                     >\r\n                        Close\r\n                </Button>\r\n                  </div>\r\n               </Modal>\r\n            </CardBody>\r\n         </Card>\r\n      </Col>\r\n   );\r\n});\r\n\r\nfunction BoardList_json({ boards, deleteBoard }) {\r\n   return (\r\n      <>\r\n         {boards.map(board => (\r\n            <Board key={board.boardSeq} board={board} deleteBoard={deleteBoard} />\r\n         ))}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default React.memo(BoardList_json);","/*!\r\n\r\n=========================================================\r\n* Argon Design System React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useInputs } from \"../lib/hooks\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Spinner,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  CustomInput\r\n} from \"reactstrap\";\r\n\r\nimport { getBoardList, deleteBoard, insertBoard } from '../modules/boardReducer_json';\r\n\r\nimport BoardList_json from '../components/BoardList_json';\r\nimport Input from 'reactstrap/lib/Input';\r\nimport FormGroup from 'reactstrap/lib/FormGroup';\r\nimport Button from 'reactstrap/lib/Button';\r\n\r\nfunction Git() {\r\n  const dispatch = useDispatch();\r\n  const mainRef = useRef(0);\r\n\r\n  const { boards } = useSelector(state => state.boardReducer_json);\r\n  const [{ boardTitle, boardCn, boardPhotoSbst }, onChange, reset] = useInputs({\r\n    boardTitle: \"\",\r\n    boardCn: \"\",\r\n    boardPhotoSbst: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainRef.current.scrollIntoView();\r\n    dispatch(getBoardList());\r\n  }, []);\r\n\r\n  const [insertAlert, setInsertAlert] = useState(false);\r\n  const [invalidAlert, setInvalidAlert] = useState(false);\r\n  const [deleteAlert, setDeleteAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (insertAlert) {\r\n        setInsertAlert(false);\r\n      } else if (invalidAlert) {\r\n        setInvalidAlert(false);\r\n      } else if (deleteAlert) {\r\n        setDeleteAlert(false);\r\n      }\r\n    }, 3000)\r\n  }, [insertAlert, invalidAlert, deleteAlert]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (boardTitle == \"\" || boardCn == \"\") {\r\n      setInvalidAlert(true);\r\n      return;\r\n    }\r\n    const boardPhotoSbst = document.getElementsByName(\"file\")[0].files[0];\r\n    dispatch(insertBoard({ boardTitle, boardCn, boardPhotoSbst }));\r\n    setInsertAlert(true);\r\n    reset();\r\n    document.getElementById(\"exampleCustomFileBrowser\").value = '';\r\n    document.getElementsByClassName(\"custom-file-label\")[0].innerText = \"Choose file\";\r\n  }, [{ boardTitle, boardCn }]);\r\n\r\n  const onDelete = useCallback((boardSeq) => {\r\n    dispatch(deleteBoard(boardSeq));\r\n    setDeleteAlert(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <main ref={mainRef}>\r\n        <div className=\"position-relative\">\r\n          {/* shape Hero */}\r\n          <section className=\"section section-lg section-shaped pb-250\">\r\n            <div className=\"shape shape-style-1 shape-default\">\r\n              <span />\r\n              <span />\r\n              <span />\r\n              <span />\r\n              <span />\r\n              <span />\r\n            </div>\r\n            <Container className=\"py-lg-md d-flex\">\r\n              <div className=\"col px-0\">\r\n                <Row>\r\n                  <Col lg=\"6\">\r\n                    <h1 className=\"display-3 text-white\">\r\n                      Board\r\n                        {/* <span>메모는 storage에 저장됩니다 ! 자유롭게 쓰세요 -</span> */}\r\n                    </h1>\r\n                    <FormGroup>\r\n                      <Input type=\"text\" placeholder=\"Title\" style={{ marginBottom: '10px' }} name=\"boardTitle\" value={boardTitle} onChange={onChange} />\r\n                      <Input type=\"textarea\" placeholder=\"Content ...\" rows=\"3\" name=\"boardCn\" value={boardCn} onChange={onChange}  style={{ marginBottom: '10px' }} />\r\n                      <CustomInput type=\"file\" id=\"exampleCustomFileBrowser\" name=\"file\" />\r\n                      <Button type=\"button\" color=\"secondary\" size=\"m\" style={{ marginTop: '10px' }}  onClick={onSubmit}>submit</Button>\r\n                    </FormGroup>\r\n                    {/* \r\n                      <p className=\"lead text-white\">\r\n                        The design system comes with four pre-built pages to\r\n                        help you get started faster. You can change the text and\r\n                        images and you're good to go.\r\n                      </p>\r\n                      <div className=\"btn-wrapper\">\r\n                        <Button\r\n                          className=\"btn-icon mb-3 mb-sm-0\"\r\n                          color=\"info\"\r\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/alerts?ref=adsr-landing-page\"\r\n                        >\r\n                          <span className=\"btn-inner--icon mr-1\">\r\n                            <i className=\"fa fa-code\" />\r\n                          </span>\r\n                          <span className=\"btn-inner--text\">Components</span>\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-white btn-icon mb-3 mb-sm-0 ml-1\"\r\n                          color=\"default\"\r\n                          href=\"https://www.creative-tim.com/product/argon-design-system-react?ref=adsr-landing-page\"\r\n                        >\r\n                          <span className=\"btn-inner--icon mr-1\">\r\n                            <i className=\"ni ni-cloud-download-95\" />\r\n                          </span>\r\n                          <span className=\"btn-inner--text\">\r\n                            Download React\r\n                          </span>\r\n                        </Button>\r\n                      </div> */}\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Container>\r\n            {/* SVG separator */}\r\n            <div className=\"separator separator-bottom separator-skew\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                preserveAspectRatio=\"none\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 2560 100\"\r\n                x=\"0\"\r\n                y=\"0\"\r\n              >\r\n                <polygon\r\n                  className=\"fill-white\"\r\n                  points=\"2560 0 2560 100 0 100\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </section>\r\n          {/* 1st Hero Variation */}\r\n          {/* ALERT */}\r\n          <Alert color=\"success\" isOpen={insertAlert} fade={true} style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 100}}>\r\n            <span className=\"alert-inner--icon\">\r\n              <i className=\"ni ni-like-2\" />\r\n            </span>\r\n            <span className=\"alert-inner--text ml-1\">\r\n              <strong>SUCCESS!</strong> 게시물이 등록되었습니다.\r\n          </span>\r\n          </Alert>\r\n          <Alert color=\"danger\" isOpen={invalidAlert} fade={true} style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 100}}>\r\n            <span className=\"alert-inner--icon\">\r\n              <i className=\"ni ni-support-16\" />\r\n            </span>\r\n            <span className=\"alert-inner--text ml-1\">\r\n              <strong>DANGER!</strong> 내용을 입력해주세요!\r\n          </span>\r\n          </Alert>\r\n          <Alert color=\"warning\" isOpen={deleteAlert} fade={true} style={{ position: \"fixed\", width: \"100%\", top: \"0px\", zIndex: 100}}>\r\n            <span className=\"alert-inner--icon\">\r\n              <i className=\"ni ni-bell-55\" />\r\n            </span>\r\n            <span className=\"alert-inner--text ml-1\">\r\n              <strong>SUCCESS!</strong> 게시물이 삭제되었습니다!\r\n          </span>\r\n          </Alert>\r\n        </div>\r\n        {\r\n          boards == undefined ?\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '-80px' }}>\r\n              <Spinner type=\"grow\" color=\"light\" style={{ width: '8rem', height: '8rem' }} />\r\n            </div> :\r\n            <section className=\"section section-lg pt-lg-0 mt--200\">\r\n            <Container>\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"12\">\r\n                  <Row className=\"row-grid\">\r\n                    <BoardList_json boards={boards} deleteBoard={onDelete} />\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </section>\r\n        }\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Git);\r\n","import React from \"react\";\r\nimport {\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport BoardListContainer from '../containers/BoardListContainer';\r\nimport BoardContainer from \"../containers/BoardContainer\";\r\nimport BoardInsertContainer from \"../containers/BoardInsertContainer\";\r\nimport Landing from \"../containers/Landing\";\r\nimport Git from \"../containers/Git\";\r\n\r\n// import useReactRouter from 'use-react-router';\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"/react-board\",\r\n    component: Git,\r\n    exact: true\r\n  },\r\n  {\r\n    path: \"/\",\r\n    component: Landing,\r\n    exact: true\r\n  },\r\n  {\r\n    path: \"/board/detail/:boardSeq\",\r\n    component: BoardContainer,\r\n    exact: true\r\n  },\r\n  {\r\n    path: \"/board/insert\",\r\n    component: BoardInsertContainer,\r\n    exact: true\r\n  },\r\n  {\r\n    path: \"/list\",\r\n    component: BoardListContainer,\r\n    exact: true\r\n  }\r\n  // {\r\n  //   path: \"/:id\",\r\n  //   component: PostPage,\r\n  //   exact: true\r\n  //   //   routes: [\r\n  //   //     {\r\n  //   //       path: \"/tacos/bus\",\r\n  //   //       component: Bus\r\n  //   //     },\r\n  //   //     {\r\n  //   //       path: \"/tacos/cart\",\r\n  //   //       component: Cart\r\n  //   //     }\r\n  //   //   ]\r\n  // },\r\n  \r\n];\r\n\r\nexport const RouteWithSubRoutes = (route) => {\r\n  return (\r\n    <Route\r\n      path={route.path}\r\n      render={props => (\r\n        // pass the sub-routes down to keep nesting\r\n        <route.component {...props} exact={route.exact} routes={route.routes} />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\n// export const RouterHookSample = () => {\r\n//   const { history, location, match } = useReactRouter;\r\n//   console.log({ history, location, match });\r\n//   return null;\r\n// }\r\n","import React, { Component } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport './App.css';\r\nimport { routes, RouteWithSubRoutes } from './routes/routes';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: #e9ecef;\r\n  }\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      // <>\r\n      //   <GlobalStyle />\r\n      //   <TodoTemplate>\r\n      //     <TodoHead />\r\n      //     <TodoList />\r\n      //     <TodoCreate />\r\n      //   </TodoTemplate>\r\n      // </>\r\n      <>\r\n        <div>\r\n          <Switch>\r\n            {routes.map((route, i) => (\r\n              <RouteWithSubRoutes key={i} {...route} />\r\n            ))}\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// router\r\n// createStore 와 루트 리듀서 불러오기\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport rootReducer from './modules';\r\n// **** (1) Provider 불러오기\r\nimport { Provider } from 'react-redux';\r\nimport logger from 'redux-logger';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\n\r\n// import './index.css';\r\nimport App from './App';\r\n\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport \"assets/vendor/nucleo/css/nucleo.css\";\r\nimport \"assets/vendor/font-awesome/css/font-awesome.min.css\";\r\nimport \"assets/scss/argon-design-system-react.scss?v1.1.0\";\r\n\r\n// logger 를 사용하는 경우, logger가 가장 마지막에 와야합니다.\r\nconst customHistory = createBrowserHistory();\r\nconst middlewares = [promiseMiddleware,\r\n  ReduxThunk.withExtraArgument({ history: customHistory }), logger];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  \r\n  composeWithDevTools(\r\n    applyMiddleware(...middlewares)\r\n  )\r\n); // 여러개의 미들웨어를 적용 할 수 있습니다.\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// **** (2) Provider 렌더링해서 기존의 App 감싸주기\r\nReactDOM.render(\r\n  <Router history={customHistory} basename=\"/react-board\">\r\n    <Provider store={store}>    \r\n        <PersistGate persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n    </Provider>\r\n  </Router>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}